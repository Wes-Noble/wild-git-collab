---
title: "Wild Git Collaboration Practice"
format: 
  html:
    code-fold: show
execute: 
  warning: false
  message: false
---


## STEP 5: No merge conflicts!

```{r partner 1}
### In this code chunk, start with the diamonds dataset (built in to
### ggplot2 package) and create a plot of price vs. carat (or some other
### variables of your choice)
# test

library(tidyverse)

diamonds = ggplot2::diamonds 

price_vs_carat_plot <- diamonds %>%
  ggplot(aes(x = carat, y = price)) +  # Map carat to x-axis, price to y-axis, and clarity to color
  geom_point(alpha = 0.6, size = 1.5) +  # Add points with transparency and size adjustment
  labs(
    title = "Diamond Price vs. Carat Weight",
    x = "Carat Weight",
    y = "Price (USD)",
    color = "Clarity"
  ) +  # Add titles and axis labels
  theme_minimal() +  # Use a clean theme
  scale_color_brewer(palette = "Set3")  # Use a color palette for clarity levels

# Display the plot
price_vs_carat_plot


```

```{r partner 2}
### In this code chunk, start with the diamonds dataset (built in to
### ggplot2 package) and create a subset based on filtering, e.g., 
### size greater than 1 carat or cut is "Ideal"



```

## STEP 7: Uh oh, merge conflicts!

```{r break-it-1}
### Both partners - delete this comment, then write some code here
### to plot, summarize, calculate something simple using the diamonds
### dataset.


```

## STEP 11: And even more merge conflicts!

```{r break-it-2}
### Both partners - delete this comment, then write some code here
### to plot, summarize, calculate something simple using the diamonds
### dataset.


```

